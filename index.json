{
  "content/getstarted.html": {
    "href": "content/getstarted.html",
    "title": "Get started with Power BI CLI",
    "keywords": "Get started with Power BI CLI Welcome to the Power BI CLI! This article introduces the CLI and helps you complete common tasks. Note All scripts and Power BI CLI examples are written for the bash shell. One-line examples will run on any platform. Longer examples which include line continuations ( \\ ) or variable assignment need to be modified to work on other shells, including PowerShell. Install the Power BI CLI You can install the CLI by following the installation instructions . After installing the CLI for the first time, check that it's installed and you've got the correct version by running pbicli --version . Sign In Before using any CLI commands with a local install, you need to sign in with pbicli login . Run the login command of the Azure CLI az login If the Azure CLI can open your default browser, it will do so and load an Azure sign-in page. Otherwise, open a browser page at https://aka.ms/devicelogin and enter the authorization code displayed in your terminal. Sign in with your account credentials in the browser. After a successfull login run the login command of the Power BI CLI pbicli login --azurecli See the Azure CLI documentation for more info. There are other ways to sign, which are covered in detail in Sign in with Power BI CLI . Feedback"
  },
  "content/howto-azure-pipeline.html": {
    "href": "content/howto-azure-pipeline.html",
    "title": "How-to: Use the Azure Pipeline task",
    "keywords": "How to use the Azure Pipeline task You can use this task with an Azure Pipeline to enable the Power BI CLI within an pipeline. The task will execute the following steps during a pipeline run: select the Azure sovereign cloud if provided login for with the provided credentials of the service connection ( azureSubsciption ) run the script either loaded from a script file or via the provided inline script YAML Snippet - task: pbicli@0 inputs: # Required azureSubscription: \"string\" # Optional cloud: \"public | china | gcc | gcchigh | dod | germany\" # Required scriptType: \"bash | batch | ps | pscore\" # Required scriptLocation: \"inlineScript | scriptPath\" # Required if scriptLocation = scriptPath scriptPath: \"string\" # Required if scriptLocation = inlineScript inlineScript: \"string\" # Optional arguments: \"string\" # Optional if scriptType = ps or pscore powerShellErrorActionPreference: \"stop | continue | silentlyContinue\" # Optional version: \"string\" # Optional workingDirectory: \"string\" # Optional verbose: boolean # Optional failOnStandardError: boolean Arguments Argument Description Required azureSubscription Azure subscription Name of Azure Resource Manager service connection. ✅ cloud Azure sovereign cloud Select which Azure sovereign cloud to sevice connection connects to scriptType Script Type Type of script: PowerShell/PowerShell Core/Bat/Shell script. Select Shell/PowerShell Core script when running on Linux agent or Batch/PowerShell/PowerShell Core script when running on Windows agent. PowerShell Core script can run on cross-platform agents (Linux, macOS, or Windows). ✅ scriptLocation Script Location Path to script: scriptPath or inlineScript ✅ scriptPath Script Path Fully qualified path of the script(.ps1 or .bat or .cmd when using Windows based agent else .ps1 or .sh when using linux based agent) or a path relative to the the default working directory ✅ inlineScript Inline Script You can write your scripts inline here. When using Windows agent, use PowerShell or PowerShell Core or batch scripting whereas use PowerShell Core or shell scripting when using Linux based agents. For batch files use the prefix \"call\" before every pbicli command. You can also pass predefined and custom variables to this script using arguments \\n\\n example for PowerShell/PowerShellCore/shell: \\npbicli version \\npbicli workspace list \\n\\n example for batch:\\ncall pbicli version \\ncall pbicli workspace list ✅ arguments Script Arguments Arguments passed to the script powerShellErrorActionPreference ErrorActionPreference Prepends the line $ErrorActionPreference = 'VALUE' at the top of your powershell/powershell core script. version Version of Power BI CLI The version of the Power BI CLI to use. If not specified, the 'latest' version will be used. workingDirectory Working Directory Current working directory where the script is run. Empty is the root of the repo (build) or artifacts (release), which is $(System.DefaultWorkingDirectory) verbose Verbose logging If this is true, this task will print more information to the console on run failOnStandardError Fail on Standard Error If this is true, this task will fail when any errors are written to the StandardError stream. Unselect the checkbox to ignore standard errors and rely on exit codes to determine the status Example To list all the workspace the service provider has acces to, you can use the following yaml snippet: - task: pbicli@1 inputs: azureSubscription: 'Demos' scriptType: 'bash' scriptLocation: 'inlineScript' inlineScript: 'pbicli workspace list' Feedback"
  },
  "content/howto-query.html": {
    "href": "content/howto-query.html",
    "title": "How-to: Query command output",
    "keywords": "How to query Power BI CLI command output using a JMESPath query (Content copied and adopted from Azure CLI documentation ) The Power BI CLI uses the --query parameter to execute a JMESPath query on the results of commands. JMESPath is a query language for JSON, giving you the ability to select and modify data from CLI output. The --query parameter is supported by all commands in the Power BI CLI. This article covers how to use the features of JMESPath and gives examples of queries. Dictionary and list CLI results Even when using an output format other than JSON, CLI command results are first treated as JSON for queries. CLI results are mostly a JSON array. Arrays are sequences of objects that can be indexed, and dictionaries are unordered objects accessed with keys. The following is an example of an array: [1, 2, 3] The following is an example of a dictionary: { \"isRunning\": false, \"time\": \"12:00\", \"number\": 1 } Get properties in a dictionary Working with dictionary results, you can access properties from the top level with just the key. The . (subexpression) character is used to access properties of nested dictionaries. Before introducing queries, take a look at the unmodified output of the pbicli workspace show command: Bash PowerShell pbicli workspace show --workspace QueryDemo pbicli workspace show --workspace QueryDemo The command will output a array: [ { \"id\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\", \"isReadOnly\": false, \"isOnDedicatedCapacity\": false, \"type\": \"Workspace\", \"name\": \"QueryDemo\" } ] The following command gets the name of the workspace by adding a query: Bash PowerShell pbicli workspace show --workspace QueryDemo --query \"[0].name\" pbicli workspace show --workspace QueryDemo --query \"[0].name\" \"QueryDemo\" Note that query strings are case sensitive. For example, changing 'name' to 'Name' in the query above will not return the correct results. Get multiple values To get more than one property, put expressions separated by commas in square brackets [ ] (a multiselect list) . The following command gets from the first workspace name and id key all at once: Bash PowerShell pbicli workspace list --query \"[0].[name,id]\" pbicli workspace list --query \"[0].[name,id]\" [\"QueryDemo\", \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\"] These values are listed in the result array in the order they were given in the query. Since the result is an array, there are no keys associated with the results. To get a dictionary instead of an array, see the section below. Rename properties in a query To get a dictionary instead of an array when querying for multiple values, use the { } (multiselect hash) operator. The format for a multiselect hash is {displayName:JMESPathExpression, ...} . displayName will be the string shown in output, and JMESPathExpression is the JMESPath expression to evaluate. Modifying the example from the last section by changing the multiselect list to a hash: Bash PowerShell pbicli workspace list --query \"[0].{Workspace:name,ID:id}\" pbicli workspace list --query \"[0].{Workspace:name,ID:id}\" { \"Workspace\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" } Get properties in an array An array has no properties of its own, but it can be indexed. This feature is shown in the last example with the expression [0] , which gets the first element of the array. There's no guarantee CLI output is ordered, so avoid using indexing unless you're sure of the order or don't care which element you get. To access the properties of elements in an array, you do one of two operations: flattening or filtering . This section covers how to flatten an array. Flattening an array is done with the [] JMESPath operator. All expressions after the [] operator are applied to each element in the current array. If [] appears at the start of the query, it flattens the CLI command result. The results of pbicli workspace list can be inspected with this feature. The following query gets the name, and id for each workspace: Bash PowerShell pbicli workspace list --query \"[].{Name: name, ID: id}\" pbicli workspace list --query \"[].{Name: name, ID: id}\" [ { \"Name\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" }, { \"Name\": \"QueryDemo 2\", \"ID\": \"0f90ad11-c52e-4bfe-929d-4a438b90f978\" } ] Filter arrays with boolean expressions The other operation used to get data from an array is filtering. Filtering is done with the [?...] JMESPath operator. This operator takes a predicate as its contents. A predicate is any statement, including Boolean properties, that can be evaluated to either true or false. Expressions where the predicate evaluates to true are included in the output. The first query demonstrate how to list the names of all Power BI workspaces connected to a premium capacity (Premium per user, Premium per capacity or Embedded). The second and third queries show two different ways to list all workspaces without premium capacity. Bash PowerShell # Boolean values are assumed to be true, so you can directly evaluate the isDefault property. pbicli workspace list --query [?isOnDedicatedCapacity] # To check if a Boolean property is false, you can use the comparison operator == or the logical operator !. pbicli workspace list --query '[?!isOnDedicatedCapacity].name' pbicli workspace list --query '[?isOnDedicatedCapacity==`false`]' # Boolean values are assumed to be true, so you can directly evaluate the isDefault property. pbicli workspace list --query \"[?isOnDedicatedCapacity]\" # To check if a Boolean property is false, you can use the comparison operator == or the logical operator !. pbicli workspace list --query \"[?!isOnDedicatedCapacity].name\" pbicli workspace list --query '[?isOnDedicatedCapacity==``false``]' Notice the extra escape characters ( ` ) surrounding the value false in the command above. These extra escape characters are present because Power BI CLI commands are considered Command Prompt scripts, so both PowerShell and Command Prompt's parsing need to be taken into consideration. The Power BI CLI will only receive a symbol if it still exists after 2 rounds of parsing. For more information about other possible quoting issues please see Azure CLI: Quoting issues with PowerShell . JMESPath offers the standard comparison and logical operators. These include < , <= , > , >= , == , and != . JMESPath also supports logical and ( && ), or ( || ), and not ( ! ). Expressions can be grouped within parenthesis, allowing for more complex predicate expressions. For the full details on predicates and logical operations, see the JMESPath specification . In the last section, you flattened an array to get the complete list of all VMs in a resource group. Using filters, this output can be restricted to only Linux VMs: Bash PowerShell pbicli workspace list --query \"[?isOnDedicatedCapacity].{Name: name, ID: id}\" pbicli workspace list --query \"[?isOnDedicatedCapacity].{Name: name, ID: id}\" [ { \"Name\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" }, { \"Name\": \"QueryDemo 2\", \"ID\": \"0f90ad11-c52e-4bfe-929d-4a438b90f978\" } ] Important In JMESPath, strings are always surrounded by single quotes ( ' ) or escape characters ( ` ). If you use double quotes as part of a string in a filter predicate, you'll get empty output. JMESPath functions JMESPath also has built-in functions that allow for more complex queries and for modifying query output. This section focuses on using JMESPath functions to create queries while the Manipulating output with functions section demonstrates how to use functions to modify the output. Expressions are evaluated before calling the function, so arguments themselves can be JMESPath expressions. The following examples demonstrates this by using contains(string, substring) , which checks to see if a string contains a substring. This command finds all workspaces with the name containing the subscring Query : Bash PowerShell pbicli workspace list --query \"[?contains(name,'Query')].{Name: name, ID: id}\" pbicli workspace list --query \"[?contains(name,'Query')].{Name: name, ID: id}\" [ { \"Name\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" }, { \"Name\": \"QueryDemo 2\", \"ID\": \"0f90ad11-c52e-4bfe-929d-4a438b90f978\" } ] Pipe expressions Similar to how | is used in the command line, | can be used in JMESPath queries to apply expressions to intermediate query results. We can also use | to break down complex queries into simpler subexpressions. To shorten the query from the previous section, use | to apply the filter after flattening and selecting data. Bash PowerShell pbicli workspace list --query \"[].{Name: name, ID: id} | [? contains(name,'Query')]\" pbicli workspace list --query \"[].{Name: name, ID: id} | [? contains(name,'Query')]\" [ { \"Name\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" }, { \"Name\": \"QueryDemo 2\", \"ID\": \"0f90ad11-c52e-4bfe-929d-4a438b90f978\" } ] See the JMESPath specification - Built-in Functions for the full list of functions. Manipulating output with functions JMESPath functions also have another purpose, which is to operate on the results of a query. Any function that returns a non-boolean value changes the result of an expression. For example, you can sort data by a property value with sort_by(array, &sort_expression) . JMESPath uses a special operator, & , for expressions that should be evaluated later as part of a function. The next example shows how to sort a VM list by OS disk size: Bash PowerShell pbicli workspace list --query \"sort_by([].{Name: name, ID: id}, &Name)\" pbicli workspace list --query \"sort_by([].{Name: name, ID: id}, &Name)\" [ { \"Name\": \"QueryDemo\", \"ID\": \"a4621d17-9dfd-4ed9-af64-404ce45e95a8\" }, { \"Name\": \"QueryDemo 2\", \"ID\": \"0f90ad11-c52e-4bfe-929d-4a438b90f978\" } ] See the JMESPath specification - Built-in Functions for the full list of functions. Formatting query results The Power BI CLI uses JSON as its default output format, however different output formats may better suit a query depending on its purpose and results. Note that queries are always run on the JSON output first and then formatted. This section will go over tsv formatting and some use cases for each format. TSV output format The tsv output format returns tab- and newline-separated values without additional formatting, keys, or other symbols. This is useful when the output is consumed by another command. One use case for tsv formatting is queries that retrieve a value out of a CLI command, such as an Power BI workspace ID, and store the value in a local environment variable. By default the results are returned in JSON format. This may be an issue when dealing with JSON strings which are enclosed in \" characters. The quotes may not be interpreted by the shell if the command output is directly assigned to the environment variable. This can be seen in the following example that assigns a query result to an environment variable: Bash PowerShell WORKSPACE=(pbicli workspace show --workspace QueryDemo --query \"[0].name\") echo $WORKSPACE $WORKSPACE=$(pbicli workspace show --workspace QueryDemo --query \"[0].name\") echo $WORKSPACE \"QueryDemo\" To prevent enclosing return values with type information use tsv formatting as demonstrated in the following query: Bash PowerShell WORKSPACE=(pbicli workspace show --workspace QueryDemo --query \"[0].name\" --output tsv) echo $WORKSPACE $WORKSPACE=$(pbicli workspace show --workspace QueryDemo --query \"[0].name\" --output tsv) echo $WORKSPACE QueryDemo Another use case is to use multiple values form a Power BI CLI query in combination with the next series of commands. This is shown in the following example that assigns a query result with all the workspace ids to an environment variable and loops thru that environment variable to execute the next Power BI CLI command to retrieve all reports within the provided workspace id: Bash PowerShell # Retrieve all workspace ids workspaces=`pbicli workspace list --query [*]id --output tsv` # Loop thru all the available workspaces for workspace in $workspaces do pbicli report list --workspace $workspace done # Retrieve all workspace ids $workspaces=$(pbicli workspace list --query [*]id --output tsv) # Loop thru all the available workspaces foreach ($workspace in $workspaces) { pbicli report list --workspace $workspace } Feedback"
  },
  "content/howto-quotes.html": {
    "href": "content/howto-quotes.html",
    "title": "How-to: Using quotes sucessfully",
    "keywords": "Using quotes sucessfully Using the correct quotes ( ' single, \" double or the ` grave-accent) in combination with a shell is usually a challenge. Use quotation marks in parameters (Content copied and adopted from Azure CLI documentation ) When you work with Power BI CLI commands, be aware of how your shell uses quotation marks and escapes characters. If you support scripts used in different shells, you need to understand how they differ. Bash. Quoting PowerShell. About Quoting Rules Windows Command Prompt. How-to: Escape Characters, Delimiters and Quotes at the Windows command line Note Due to a known issue in PowerShell, some extra escaping rules apply. For more information, see Quoting issues with PowerShell . To avoid unanticipated results, here are a few suggestions: If you provide a parameter that contains whitespace, wrap it in quotation marks. In Bash or PowerShell, both single and double quotes are interpreted correctly. In Windows Command Prompt, only double quotes are interpreted correctly -- single quotes are treated as part of the value. If your command is only going to run on Bash (or Zsh), use single quotes to preserve the content inside the JSON string. This is necessary when supplying inline JSON values. For example, this JSON is correct in Bash: '{\"key\": \"value\"}' . If your command will be run at a Windows Command Prompt, you must use double quotes. If the value contains double quotes, you must escape it. The equivalent of the above JSON string is \"{\\\"key\\\": \\\"value\\\"}\" Use Power BI CLI's @<file> convention to load from a file and bypass the shell's interpretation mechanisms. pbicli dataset datasource update --workspace Workspace --report MyReport --update-details @updateDetails.json Bash evaluates double quotes in exported variables. If this behavior isn't what you want, escape the variable: \"\\$variable\" . There are special characters of PowerShell, such as at @ . To run Power BI CLI in PowerShell, add ` before the special character to escape it. You can also enclose the value in single or double quotes \"/\". # The following three examples will work in PowerShell --parameterName `@parameters.json --parameterName '@parameters.json' --parameterName \"@parameters.json\" # This example will not work in PowerShell --parameterName @parameters.json When you use the --query parameter with a command, some characters of JMESPath need to be escaped in the shell. Bash PowerShell These three commands are correct and equivalent in Bash: pbicli version --query '\"powerbi-cli\"' pbicli version --query \\\"powerbi-cli\\\" pbicli version --query \"\\\"powerbi-cli\\\"\" Here are two examples of incorrect commands in Bash: # Wrong, as the dash needs to be quoted in a JMESPath query pbicli version --query powerbi-cli pbicli version: error: argument --query: ParserError: Unexpected token type: Number, value: NaN # Wrong, as the dash needs to be quoted in a JMESPath query, but quotes are interpreted by Bash az version --query \"powerbi-cli\" pbicli version: error: argument --query: ParserError: Unexpected token type: Number, value: NaN These five commands will work correctly in PowerShell: pbicli version --query '\\\"powerbi-cli\\\"' pbicli version --query \"\\`\"powerbi-cli\\`\"\" pbicli version --query \"\\\"\"powerbi-cli\\\"\"\" For more example comparisons between Bash, PowerShell and Cmd, see Query Azure CLI command output Quotes with JSON options With some commands it is possible to add plain JSON as an option to the command. In this sample we are using pbicli pipeline deploy Bash PowerShell In Bash use the single quote ' to enclose the JSON and escape the double quotes as \"\" : pbicli pipeline deploy --pipeline Pipeline --options '{ \"\"sourceStageOrder\"\": 0, \"\"options\"\": { \"\"allowOverwriteArtifact\"\": true } }' In PowerShell use the single quote ' to enclose the JSON and escape the double quotes as \"\" : pbicli pipeline deploy --pipeline Pipeline --options '{ \"\"sourceStageOrder\"\": 0, \"\"options\"\": { \"\"allowOverwriteArtifact\"\": true } }' Feedback"
  },
  "content/install.html": {
    "href": "content/install.html",
    "title": "Install the Power BI CLI",
    "keywords": "Install the Power BI CLI The Power BI CLI is available to install in Windows, macOS and Linux environments. The current version of the Power BI CLI is 1.3.2. For information about the latest release, see the release notes. To find your installed version and see if you need to update, run pbicli --version . Prerequisites As the Power BI CLI is using NodeJS you need to download and install the latest LTS version of NodeJS. Navigate to https://nodejs.org/en/download/ Windows: Download the correct installation package (Windows/MacOS) or Install the downloaded package Linux: Download and install via a package manager: https://nodejs.org/en/download/package-manager/ Install After installing NodeJS follow these steps to install the Power BI CLI Open a terminal window (Cmd/PowerShell/bash/...) Run the command npm i -g @powerbi-cli/powerbi-cli to install the latest version. Azure CLI (optional) The Power BI CLI can use the autorisation flow of Azure CLI . To install the Azure CLI see the documentation: Install the Azure CLI Next steps See What is Power BI CLI for the key characteristics. Feedback"
  },
  "content/privacy.html": {
    "href": "content/privacy.html",
    "title": "Privicy policy",
    "keywords": "Power BI CLI Privacy Terms Privacy Terms Last updated: August 21, 2022 All the Power BI CLI components (CLI, Azure pipeline task) do not collect or use any of your personal information. The CLI only receives data from Power BI and does its actions locally. No information is transmitted to any third-party services. The Power BI CLI website does collect telemetry via Azure Application Insights. The telemetry is concerned with load, performance and usage metrics, exception reports, and other diagnostic data. The main user data visible in the diagnostic reports are URLs Change log Inital version: August 21, 2022 Feedback"
  },
  "content/reference-admin.html": {
    "href": "content/reference-admin.html",
    "title": "pbicli admin",
    "keywords": "pbicli admin Commands pbicli admin activity Returns a list of audit activity events for a tenant pbicli admin app list Returns a list of apps in the organization pbicli admin app list-user Returns a list of users that have access to the specified app pbicli admin capacity assign Assigns the provided workspaces to the specified capacity pbicli admin capacity list Returns a list of capacities for the organization pbicli admin capacity list-user Returns a list of users that have access to the specified dashboard pbicli admin capacity unassign Unassigns the provided workspaces from capacity pbicli admin capacity update Changes the specific capacity information. pbicli admin dashboard list Returns a list of dashboards for the organization pbicli admin dashboard list-user Returns a list of users that have access to the specified dashboard pbicli admin dashboard subscription Returns a list of subscriptions within the specified dashboard pbicli admin dashboard tile Returns a list of tiles within the specified dashboard pbicli admin dataflow datasource Returns a list of datasources for the specified dataflow pbicli admin dataflow export Exports the specified dataflow definition pbicli admin dataflow list Returns a list of dataflows for the organization pbicli admin dataflow list-user Returns a list of users that have access to the specified dataflow pbicli admin dataflow upstream Returns a list of upstream dataflows for the specified dataflow in a Power BI workspace pbicli admin dataset dataflow Returns a list of upstream dataflows in a Power BI workspace pbicli admin dataset datasource Returns a list of datasources for the specified dataset pbicli admin dataset list Returns a list of datasets for the organization pbicli admin dataset list-user Returns a list of users that have access to the specified dataset pbicli admin import Returns a list of imports for the organization pbicli admin key add Adds an encryption key for Power BI workspaces assigned to a capacity pbicli admin key list Returns the encryption keys for the tenant pbicli admin key rotate Adds an encryption key for Power BI workspaces assigned to a capacity pbicli admin label remove Remove sensitivity labels from artifacts pbicli admin label set Set sensitivity labels from artifacts pbicli admin pipeline delete-user Removes user permissions to the specified workspace pbicli admin pipeline list Returns a list of workspaces for the organization pbicli admin pipeline list-user Returns a list of users that have access to the specified workspace pbicli admin pipeline update-user Updates the specified workspace properties pbicli admin refresh Returns a list of imports for the organization pbicli admin report list Returns a list of reports for the organization pbicli admin report list-user Returns a list of users that have access to the specified dataset pbicli admin report subscription Returns a list of users that have access to the specified dataset pbicli admin shared Returns a list of Power BI items that are shared pbicli admin user artifact Returns a list of apps in the organization pbicli admin user subscription Returns a list of subscriptions that the given user has subscribed to pbicli admin workspace add-user Grants user permissions to the specified workspace pbicli admin workspace delete-user Removes user permissions to the specified workspace pbicli admin workspace list Returns a list of workspaces for the organization pbicli admin workspace list-user Returns a list of users that have access to the specified workspace pbicli admin workspace modified Gets a list of workspace IDs in the organization pbicli admin workspace restore Restores a deleted workspace pbicli admin workspace result Gets the scan result for the specified scan pbicli admin workspace scan Initiates a scan to receive metadata for the requested list of workspaces pbicli admin workspace status Gets the scan status for the specified scan pbicli admin workspace unused Returns a list of artifacts that have not been used within 30 days for the specified workspace pbicli admin workspace update-user Updates the specified workspace properties pbicli admin activity Returns a list of audit activity events for a tenant pbicli admin activity [--filter] [--continuation-token] [--date] [--start-time] [--end-time] Parameters --filter <filter> Filters the results based on a boolean condition, using 'Activity', 'UserId', or both properties. Supports only 'eq' and 'and' operators --continuation-token <token> Token required to get the next chunk of the result set --date <date> Date for audit event results. Used with (optional) time values --start-time <time> Start UTC time of the window for audit event results. If not provided '00:00:00' will be used --end-time <time> End UTC time of the window for audit event results. If not provided '23:59:59' will be used Global Parameters pbicli admin app list Returns a list of apps in the organization pbicli admin app list [--top] Parameters --top <number> Returns only the first results. Default: 5000 Global Parameters pbicli admin app list-user Returns a list of users that have access to the specified app pbicli admin app list-user [--app] [-a] Parameters --app -a <name> Name or ID of the Power BI app Global Parameters pbicli admin capacity assign Assigns the provided workspaces to the specified capacity pbicli admin capacity assign [--capacity] [-c] [--workspace] [-w] Parameters --capacity -c <name> Name or ID of the Power BI capacity --workspace -w <name> Name(s) or ID(s) of the Power BI workspace. Use comma seperated if multiple Global Parameters pbicli admin capacity list Returns a list of capacities for the organization pbicli admin capacity list [--expand] Parameters --expand <entity> Expands related entities inline. Allowed values: tenantKey Global Parameters pbicli admin capacity list-user Returns a list of users that have access to the specified dashboard pbicli admin capacity list-user [--dashboard] [-d] Parameters --dashboard -d <name> Name or ID of the Power BI dashboard Global Parameters pbicli admin capacity unassign Unassigns the provided workspaces from capacity pbicli admin capacity unassign [--workspace] [-w] Parameters --workspace -w <name> Name(s) or ID(s) of the Power BI workspace. Use comma seperated if multiple Global Parameters pbicli admin capacity update Changes the specific capacity information. pbicli admin capacity update [--capacity] [-c] [--tenant-key] Parameters --capacity -c <name> Name or ID of the Power BI capacity --tenant-key <key> The id of the encryption key Global Parameters pbicli admin dashboard list Returns a list of dashboards for the organization pbicli admin dashboard list [--workspace] [-w] [--expand] [--filter] [--top] [--skip] Parameters --workspace -w <name> Name or ID of the Power BI workspace --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: tiles. Not used if --workspace is provided --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin dashboard list-user Returns a list of users that have access to the specified dashboard pbicli admin dashboard list-user [--dashboard] [-d] Parameters --dashboard -d <name> Name or ID of the Power BI dashboard Global Parameters pbicli admin dashboard subscription Returns a list of subscriptions within the specified dashboard pbicli admin dashboard subscription [--dashboard] [-d] Parameters --dashboard -d <name> Name or ID of the Power BI dashboard Global Parameters pbicli admin dashboard tile Returns a list of tiles within the specified dashboard pbicli admin dashboard tile [--dashboard] [-d] Parameters --dashboard -d <name> Name or ID of the Power BI dashboard Global Parameters pbicli admin dataflow datasource Returns a list of datasources for the specified dataflow pbicli admin dataflow datasource [--dataflow] [-d] Parameters --dataflow -d <name> Name or ID of the Power BI dataflow Global Parameters pbicli admin dataflow export Exports the specified dataflow definition pbicli admin dataflow export [--dataflow] [-d] Parameters --dataflow -d <name> Name or ID of the Power BI dataflow Global Parameters pbicli admin dataflow list Returns a list of dataflows for the organization pbicli admin dataflow list [--workspace] [-w] [--filter] [--top] [--skip] Parameters --workspace -w <name> Name or ID of the Power BI workspace --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin dataflow list-user Returns a list of users that have access to the specified dataflow pbicli admin dataflow list-user [--dataflow] [-d] Parameters --dataflow -d <name> Name or ID of the Power BI dataflow Global Parameters pbicli admin dataflow upstream Returns a list of upstream dataflows for the specified dataflow in a Power BI workspace pbicli admin dataflow upstream [--workspace] [-w] [--dataflow] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace --dataflow -d <name> Name or ID of the Power BI dataflow Global Parameters pbicli admin dataset dataflow Returns a list of upstream dataflows in a Power BI workspace pbicli admin dataset dataflow [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli admin dataset datasource Returns a list of datasources for the specified dataset pbicli admin dataset datasource [--dataset] [-d] Parameters --dataset -d <name> Name or ID of the Power BI dataset Global Parameters pbicli admin dataset list Returns a list of datasets for the organization pbicli admin dataset list [--workspace] [-w] [--filter] [--top] [--skip] Parameters --workspace -w <name> Name or ID of the Power BI workspace --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin dataset list-user Returns a list of users that have access to the specified dataset pbicli admin dataset list-user [--dataset] [-d] Parameters --dataset -d <name> Name or ID of the Power BI dataset Global Parameters pbicli admin import Returns a list of imports for the organization pbicli admin import [--expand] [--filter] [--top] [--skip] Parameters --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: datasets, reports --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin key add Adds an encryption key for Power BI workspaces assigned to a capacity pbicli admin key add [--name] [--keyVaultURI] [--active] [--default] Parameters --name <name> The name of the encryption key --keyVaultURI <uri> Uri to the version of the Azure Key Vault key to be used --active Indicates to activate any inactivated capacities to use this key for its encryption --default Indicates that this key is set as default for the entire tenant. Any new capacity creation will inherit this key upon creation Global Parameters pbicli admin key list Returns the encryption keys for the tenant pbicli admin key list Global Parameters pbicli admin key rotate Adds an encryption key for Power BI workspaces assigned to a capacity pbicli admin key rotate [--key] [--keyVaultURI] Parameters --key <id> ID of the encryption key --keyVaultURI <uri> Uri to the version of the Azure Key Vault key to be used Global Parameters pbicli admin label remove Remove sensitivity labels from artifacts pbicli admin label remove [--label-file] Parameters --label-file <file> File with the artifact IDs to remove the sensitivity labels in JSON format Global Parameters pbicli admin label set Set sensitivity labels from artifacts pbicli admin label set [--label-file] Parameters --label-file <file> File with the artifact IDs to add the sensitivity labels in JSON format Global Parameters pbicli admin pipeline delete-user Removes user permissions to the specified workspace pbicli admin pipeline delete-user [--pipeline] [-p] [--identifier] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --identifier <identifier> Identifier of the user or principal Global Parameters pbicli admin pipeline list Returns a list of workspaces for the organization pbicli admin pipeline list [--expand] [--filter] [--top] [--skip] Parameters --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: users, stages --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin pipeline list-user Returns a list of users that have access to the specified workspace pbicli admin pipeline list-user [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli admin pipeline update-user Updates the specified workspace properties pbicli admin pipeline update-user [--pipeline] [-p] [--identifier] [--access-right] [--principal-type] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --identifier <identifier> Identifier of the user or principal --access-right <right> Access right. Allowed values: Admin --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters pbicli admin refresh Returns a list of imports for the organization pbicli admin refresh [--capacity] [-c] [--refreshable-id] [--expand] [--filter] [--top] [--skip] Parameters --capacity -c <name> Name or ID of the Power BI capacity --refreshable-id <refreshId> The refreshable id --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: capacity, workspace --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin report list Returns a list of reports for the organization pbicli admin report list [--workspace] [-w] [--filter] [--top] [--skip] Parameters --workspace -w <name> Name or ID of the Power BI workspace --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin report list-user Returns a list of users that have access to the specified dataset pbicli admin report list-user [--report] [-r] Parameters --report -r <report> Name or ID of the Power BI report Global Parameters pbicli admin report subscription Returns a list of users that have access to the specified dataset pbicli admin report subscription [--report] [-r] Parameters --report -r <report> Name or ID of the Power BI report Global Parameters pbicli admin shared Returns a list of Power BI items that are shared pbicli admin shared [--public] [--continuation-token] Parameters --public Returns only items that are shared via 'published to the web' --continuation-token <token> Token required to get the next chunk of the result set Global Parameters pbicli admin user artifact Returns a list of apps in the organization pbicli admin user artifact [--user] [--continuation-token] Parameters --user <UPN> The user principal name (UPN) or Graph ID of the user --continuation-token <token> Token to get the next chunk of the result set Global Parameters pbicli admin user subscription Returns a list of subscriptions that the given user has subscribed to pbicli admin user subscription [--user] [--continuation-token] Parameters --user <UPN> The user principal name (UPN) or Graph ID of the user --continuation-token <token> Token to get the next chunk of the result set Global Parameters pbicli admin workspace add-user Grants user permissions to the specified workspace pbicli admin workspace add-user [--workspace] [-w] [--email] [--identifier] [--access-right] [--principal-type] Parameters --workspace -w <name> Name or ID of the Power BI workspace --email <email> Email address of the user --identifier <identifier> Identifier of the principal --access-right <right> Access right. Allowed values: Admin, Contributor, Member, Viewer --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters pbicli admin workspace delete-user Removes user permissions to the specified workspace pbicli admin workspace delete-user [--workspace] [-w] [--user] Parameters --workspace -w <name> Name or ID of the Power BI workspace --user <UPN> The user principal name (UPN) of the user to remove Global Parameters pbicli admin workspace list Returns a list of workspaces for the organization pbicli admin workspace list [--expand] [--filter] [--top] [--skip] Parameters --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: dashboards, datasets, dataflows, reports, users, workbooks --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli admin workspace list-user Returns a list of users that have access to the specified workspace pbicli admin workspace list-user [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli admin workspace modified Gets a list of workspace IDs in the organization pbicli admin workspace modified [--modified] [--personal-workspaces] Parameters --modified <datetime> Last modified date (must be in ISO 8601 compliant UTC format) --personal-workspaces Include personal workspaces Global Parameters pbicli admin workspace restore Restores a deleted workspace pbicli admin workspace restore [--workspace] [-w] [--owner] [--name] Parameters --workspace -w <name> Name or ID of the Power BI workspace --owner <email> The email address of the owner of the group to be restored --name [name] The optional new name of the group to be restored Global Parameters pbicli admin workspace result Gets the scan result for the specified scan pbicli admin workspace result [--scan-id] Parameters --scan-id <scanId> The scan ID for the triggered scan Global Parameters pbicli admin workspace scan Initiates a scan to receive metadata for the requested list of workspaces pbicli admin workspace scan [--dataset-expressions] [--dataset-schema] [--datasource-details] [--artifact-users ] [--lineage] [--workspace-file] Parameters --dataset-expressions Whether to return dataset expressions (Dax query and Mashup) --dataset-schema Whether to return dataset schema (Tables, Columns and Measures) --datasource-details Whether to return datasource details --artifact-users Whether to return artifact user details (Permission level) --lineage Whether to return lineage info (upstream dataflows, tiles, datasource IDs) --workspace-file <file> File with the workspace IDs to add to the scan in JSON format Global Parameters pbicli admin workspace status Gets the scan status for the specified scan pbicli admin workspace status [--scan-id] Parameters --scan-id <scanId> The scan ID for the triggered scan Global Parameters pbicli admin workspace unused Returns a list of artifacts that have not been used within 30 days for the specified workspace pbicli admin workspace unused [--workspace] [-w] [--continuation-token] Parameters --workspace -w <name> Name or ID of the Power BI workspace --continuation-token <token> Token to get the next chunk of the result set Global Parameters pbicli admin workspace update-user Updates the specified workspace properties pbicli admin workspace update-user [--workspace] [-w] [--update-details] [--update-details-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace --update-details <data> String with the update details in JSON format. Use @{file} to load from a file --update-details-file <file> File with the update details in JSON format. Deprecated: use --update-details @{file} Global Parameters Feedback"
  },
  "content/reference-app.html": {
    "href": "content/reference-app.html",
    "title": "pbicli app",
    "keywords": "pbicli app Commands pbicli app dashboard list List dashboards of a Power BI apps pbicli app dashboard show Get the detail of a dashboard of a Power BI app pbicli app dashboard tile list List of dashboard tiles of a Power BI apps pbicli app dashboard tile show Get the details of a dashboard tile of a Power BI apps pbicli app list List Power BI apps pbicli app report list List reports of a Power BI apps pbicli app report show Get the detail of a report of a Power BI app pbicli app show Get the details of a Power BI app pbicli app dashboard list List dashboards of a Power BI apps pbicli app dashboard list [--app] [-a] Parameters --app -a <app> Name or ID of the Power BI app Global Parameters pbicli app dashboard show Get the detail of a dashboard of a Power BI app pbicli app dashboard show [--app] [-a] [--dashboard] [-d] Parameters --app -a <app> Name or ID of the Power BI app --dashboard -d <dashboard> Name or ID of the dashboard of the Power BI app Global Parameters pbicli app dashboard tile list List of dashboard tiles of a Power BI apps pbicli app dashboard tile list [--app] [-a] [--dashboard] [-d] Parameters --app -a <app> Name or ID of the Power BI app --dashboard -d <dashboard> Name or ID of the dashboard of the Power BI app Global Parameters pbicli app dashboard tile show Get the details of a dashboard tile of a Power BI apps pbicli app dashboard tile show [--app] [-a] [--dashboard] [-d] [--tile] [-t] Parameters --app -a <app> Name or ID of the Power BI app --dashboard -d <dashboard> Name or ID of the dashboard of the Power BI app --tile -t <tile> Name or ID of the tile of the dashboard of the Power BI app Global Parameters pbicli app list List Power BI apps pbicli app list Global Parameters pbicli app report list List reports of a Power BI apps pbicli app report list [--app] [-a] Parameters --app -a <app> Name or ID of the Power BI app Global Parameters pbicli app report show Get the detail of a report of a Power BI app pbicli app report show [--app] [-a] [--report] [-r] Parameters --app -a <app> Name or ID of the Power BI app --report -r <report> Name or ID of the report of the Power BI app Global Parameters pbicli app show Get the details of a Power BI app pbicli app show [--app] [-a] Parameters --app -a <app> Name or ID of the Power BI app Global Parameters Feedback"
  },
  "content/reference-capacity.html": {
    "href": "content/reference-capacity.html",
    "title": "pbicli capacity",
    "keywords": "pbicli capacity Commands pbicli capacity assign Assigns the specified workspace to the specified capacity pbicli capacity list Returns a list of capacities the user has access to pbicli capacity refresh Returns a list of imports for the organization pbicli capacity status Gets the status of the assignment to capacity operation of the specified workspace pbicli capacity unassign Unassigns the specified workspace to the specified capacity pbicli capacity workload Operations for working with the the state of capacity workloads pbicli capacity assign Assigns the specified workspace to the specified capacity pbicli capacity assign [--capacity] [-c] [--workspace] [-w] Parameters --capacity -c <name> Name or ID of the Power BI capacity --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli capacity list Returns a list of capacities the user has access to pbicli capacity list Global Parameters pbicli capacity refresh Returns a list of imports for the organization pbicli capacity refresh [--capacity] [-c] [--refreshableId] [--expand] [--filter] [--top] [--skip] Parameters --capacity -c <name> Name or ID of the Power BI capacity --refreshableId <refreshId> The refreshable id --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: capacity, workspace --filter <filter> Filters the results based on a boolean condition --top <number> Returns only the first results. Default: 5000 --skip <number> Skips the first results Global Parameters pbicli capacity status Gets the status of the assignment to capacity operation of the specified workspace pbicli capacity status [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli capacity unassign Unassigns the specified workspace to the specified capacity pbicli capacity unassign [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli capacity workload Operations for working with the the state of capacity workloads pbicli capacity workload [--capacity] [-c] [--workload] [--state] [--memory] Parameters --capacity -c <name> Name or ID of the Power BI capacity --workload <name> Name the Power BI workload --state <state> The capacity workload state. Allowed values: enabled, disabled --memory <number> The memory percentage maximum limit Global Parameters Feedback"
  },
  "content/reference-cloud.html": {
    "href": "content/reference-cloud.html",
    "title": "pbicli cloud",
    "keywords": "pbicli cloud Commands pbicli cloud available List available Power BI clouds pbicli cloud list List active Power BI cloud pbicli cloud set Set the active Power BI cloud pbicli cloud available List available Power BI clouds pbicli cloud available Global Parameters pbicli cloud list List active Power BI cloud pbicli cloud list Global Parameters pbicli cloud set Set the active Power BI cloud pbicli cloud set [--name] Parameters --name <name> Name of a registered cloud Global Parameters Feedback"
  },
  "content/reference-configure.html": {
    "href": "content/reference-configure.html",
    "title": "pbicli configure",
    "keywords": "pbicli configure Commands pbicli configure list List all applicable defaults pbicli configure set Set the defaults arguments pbicli configure list List all applicable defaults pbicli configure list Global Parameters pbicli configure set Set the defaults arguments pbicli configure set [--defaults] [-d] Parameters --defaults -d <default...> Space-separated 'name=value' pairs for common argument defaults Global Parameters Examples Set the default for the --workspace parameter Bash PowerShell pbicli configure set --defaults workspace=Demos pbicli configure set --defaults workspace=Demos After setting a default, the parameter can be omitted in the next command, like to get all the reports of the 'Demos' workspace: Bash PowerShell pblicli report list pblicli report list Feedback"
  },
  "content/reference-dashboard.html": {
    "href": "content/reference-dashboard.html",
    "title": "pbicli dashboard",
    "keywords": "pbicli dashboard Commands pbicli dashboard create Create a Power BI dashboard pbicli dashboard delete Delete a Power BI dashboard pbicli dashboard list List Power BI dashboards in a workspace pbicli dashboard show Get the details of a Power BI dashboard pbicli dashboard tile create Clone a Power BI dashboard tile pbicli dashboard tile list List Power BI dashboard tiles in a workspace pbicli dashboard tile show Get the details of a Power BI dashboard tile pbicli dashboard create Create a Power BI dashboard pbicli dashboard create [--workspace] [-w] [--dashboard] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name of the Power BI dashboard Global Parameters pbicli dashboard delete Delete a Power BI dashboard pbicli dashboard delete [--workspace] [-w] [--dashboard] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name or ID of the Power BI dashboard Global Parameters pbicli dashboard list List Power BI dashboards in a workspace pbicli dashboard list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli dashboard show Get the details of a Power BI dashboard pbicli dashboard show [--workspace] [-w] [--dashboard] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name or ID of the Power BI dashboard Global Parameters pbicli dashboard tile create Clone a Power BI dashboard tile pbicli dashboard tile create [--workspace] [-w] [--dashboard] [-d] [--tile] [-t] [--dest-dashboard] [--dest-workspace] [--dest-model] [--dest-report] [--abort] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name of the Power BI dashboard --tile -t <tile> Name or ID of the Power BI dashboard tile --dest-dashboard <destdashboard> ID of the destination Power BI dashboard --dest-workspace [destworkspace] ID of the destination Power BI workspace --dest-model [destmodel] ID of the destination Power BI model/dataset --dest-report [destreport] ID of the destination Power BI report --abort If set the clone action will be arborted if the row/column position is not available Global Parameters pbicli dashboard tile list List Power BI dashboard tiles in a workspace pbicli dashboard tile list [--workspace] [-w] [--dashboard] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name or ID of the Power BI dashboard Global Parameters pbicli dashboard tile show Get the details of a Power BI dashboard tile pbicli dashboard tile show [--workspace] [-w] [--dashboard] [-d] [--tile] [-t] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dashboard -d <dashboard> Name or ID of the Power BI dashboard --tile -t <tile> Name or ID of the Power BI dashboard tile Global Parameters Feedback"
  },
  "content/reference-dataflow.html": {
    "href": "content/reference-dataflow.html",
    "title": "pbicli dataflow",
    "keywords": "pbicli dataflow Commands pbicli dataflow datasource Get the datasources of a Power BI dataflow pbicli dataflow delete Deletes a Power BI dataflow from a group pbicli dataflow list List Power BI dataflows in a group pbicli dataflow refresh start Start a refresh of a Power BI dataflow pbicli dataflow refresh update Update a Power BI refresh schedule pbicli dataflow show Get the details of a Power BI dataflow pbicli dataflow storage assign Assign a Power BI group to a dataflow storage account pbicli dataflow storage list List Power BI dataflow storage accounts pbicli dataflow storage unassign Unassign a Power BI group to a dataflow storage account pbicli dataflow transaction cancel Attempts to cancel a Power BI group dataflow transaction pbicli dataflow transaction list List Power BI dataflow Transactions pbicli dataflow update Update dataflow properties, capabilities and settings pbicli dataflow upstream Get the upstream dataflows of a Power BI dataflow pbicli dataflow datasource Get the datasources of a Power BI dataflow pbicli dataflow datasource [--workspace] [-w] [--dataflow] [-f] Parameters --workspace -w <name> Name or ID of the Power BI workspace --dataflow -f <dataflow> Name or ID of the Power BI dataflow Global Parameters pbicli dataflow delete Deletes a Power BI dataflow from a group pbicli dataflow delete [--workspace] [-w] [--dataflow] [-f] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataflow -f <dataflow> Name or ID of the Power BI dataflow Global Parameters pbicli dataflow list List Power BI dataflows in a group pbicli dataflow list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli dataflow refresh start Start a refresh of a Power BI dataflow pbicli dataflow refresh start [--workspace] [-w] [--dataflow] [-f] [--notify] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataflow -f <dataflow> Name or ID of the Power BI dataflow --notify <option> Allowed values: always, failure, none Global Parameters pbicli dataflow refresh update Update a Power BI refresh schedule pbicli dataflow refresh update [--workspace] [-w] [--dataflow] [-f] [--refresh-schedule] [--refresh-schedule-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataflow -f <dataflow> Name or ID of the Power BI dataflow --refresh-schedule <data> String with the refresh schedule in JSON format. Use @{file} to load from a file --refresh-schedule-file <file> File with the refresh schedule in JSON format. Deprecated: use --refresh-schedule @{file} Global Parameters pbicli dataflow show Get the details of a Power BI dataflow pbicli dataflow show [--workspace] [-w] [--dataflow] [-f] Parameters --workspace -w <name> Name or ID of the Power BI workspace --dataflow -f <dataflow> Name or ID of the Power BI dataflow Global Parameters pbicli dataflow storage assign Assign a Power BI group to a dataflow storage account pbicli dataflow storage assign [--workspace] [-w] [--storage-account] Parameters --workspace -w <name> Name or ID of the Power BI workspace --storage-account <storage> ID of the Power BI dataflow storage account Global Parameters pbicli dataflow storage list List Power BI dataflow storage accounts pbicli dataflow storage list Global Parameters pbicli dataflow storage unassign Unassign a Power BI group to a dataflow storage account pbicli dataflow storage unassign [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli dataflow transaction cancel Attempts to cancel a Power BI group dataflow transaction pbicli dataflow transaction cancel [--workspace] [-w] [--transaction] Parameters --workspace -w <name> Name or ID of the Power BI workspace --transaction <transaction> ID of the Power BI dataflow transaction Global Parameters pbicli dataflow transaction list List Power BI dataflow Transactions pbicli dataflow transaction list [--workspace] [-w] [--dataflow] [-f] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataflow -f <dataflow> Name or ID of the Power BI dataflow Global Parameters pbicli dataflow update Update dataflow properties, capabilities and settings pbicli dataflow update [--workspace] [-w] [--dataflow] [-f] [--update] [--update-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataflow -f <dataflow> Name or ID of the Power BI dataflow --update <data> String with the update dataflow settings in JSON format. Use @{file} to load from a file --update-file <file> File with the update dataflow settings in JSON format. Deprecated: use --update @{file} Global Parameters pbicli dataflow upstream Get the upstream dataflows of a Power BI dataflow pbicli dataflow upstream [--workspace] [-w] [--dataflow] [-f] Parameters --workspace -w <name> Name or ID of the Power BI workspace --dataflow -f <dataflow> Name or ID of the Power BI dataflow Global Parameters Feedback"
  },
  "content/reference-dataset.html": {
    "href": "content/reference-dataset.html",
    "title": "pbicli dataset",
    "keywords": "pbicli dataset Commands pbicli dataset dataflow Get the dataflows uplinks of a Power BI dataset pbicli dataset datasource gateway List the datasource of a gateways linked to a Power BI dataset pbicli dataset datasource list List the datasources of a Power BI dataset pbicli dataset datasource update Update the datasources of a Power BI dataset pbicli dataset delete Deletes a Power BI dataset from a group pbicli dataset gateway datasource List the datasource of a gateways linked to a Power BI dataset pbicli dataset gateway list List the gateways of a Power BI dataset pbicli dataset gateway update Bind a gatweay of a Power BI dataset pbicli dataset list List Power BI datasets in a group pbicli dataset parameter list List the parameters of a Power BI dataset pbicli dataset parameter update Update the parameters of a Power BI dataset pbicli dataset query Execute an DAX query against the Power BI XMLA endpoint pbicli dataset refresh cancel Cancels the refresh operation for the specified Power BI dataset pbicli dataset refresh detail Returns execution details of the refresh operation for the specified Power BI dataset pbicli dataset refresh history Get the history of a Power BI refresh schedule pbicli dataset refresh show Get the details of a Power BI refresh schedule pbicli dataset refresh start Triggers a Power BI dataset refresh pbicli dataset refresh update Update a Power BI refresh schedule pbicli dataset set-owner Set the owner of a Power BI dataset to the current user / service principal pbicli dataset show Get the details of a Power BI dataset pbicli dataset update Updates the properties for the specified dataset pbicli dataset user update Update access of a user or service pricipal pbicli dataset dataflow Get the dataflows uplinks of a Power BI dataset pbicli dataset dataflow [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset datasource gateway List the datasource of a gateways linked to a Power BI dataset pbicli dataset datasource gateway [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset datasource list List the datasources of a Power BI dataset pbicli dataset datasource list [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset datasource update Update the datasources of a Power BI dataset pbicli dataset datasource update [--workspace] [-w] [--dataset] [-d] [--update-details] [--update-details-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --update-details <data> String with the connection server details in JSON format. Use @{file} to load from a file --update-details-file <file> File with the connection server details in JSON format. Deprecated: use --update-details @{file} Global Parameters pbicli dataset delete Deletes a Power BI dataset from a group pbicli dataset delete [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset gateway datasource List the datasource of a gateways linked to a Power BI dataset pbicli dataset gateway datasource [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset gateway list List the gateways of a Power BI dataset pbicli dataset gateway list [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset gateway update Bind a gatweay of a Power BI dataset pbicli dataset gateway update [--workspace] [-w] [--dataset] [-d] [--gatewayId] [--datasourceIds] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --gatewayId <gatewayId> Name or ID of the Power BI gateway --datasourceIds <data> Set of datasource Ids. Comma seperated Global Parameters pbicli dataset list List Power BI datasets in a group pbicli dataset list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli dataset parameter list List the parameters of a Power BI dataset pbicli dataset parameter list [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset parameter update Update the parameters of a Power BI dataset pbicli dataset parameter update [--workspace] [-w] [--dataset] [-d] [--parameter] [--parameter-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --parameter <data> String with the parameters in JSON format. Use @{file} to load from a file --parameter-file <file> File with the parameters in JSON format. Deprecated: use --parameter @{file} Global Parameters pbicli dataset query Execute an DAX query against the Power BI XMLA endpoint pbicli dataset query [--workspace] [-w] [--dataset] [-d] [--dax] [--dax-file] [--script] [--script-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. Optional if dataset is provided as ID. --dataset -d <dataset> Name or ID of the Power BI dataset --dax <query> String with the DAX query to be executed. Use @{file} to load from a file --dax-file <file> File with the DAX query to be executed. Deprecated: use --dax @{file} --script <script> String with the raw query statement in JSON format. Use @{file} to load from a file --script-file <file> File with the raw query statement in JSON format. Deprecated: use --script @{file} Global Parameters pbicli dataset refresh cancel Cancels the refresh operation for the specified Power BI dataset pbicli dataset refresh cancel [--workspace] [-w] [--dataset] [-d] [--refresh] [-r] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --refresh -r <refresh> ID of the refresh id Global Parameters pbicli dataset refresh detail Returns execution details of the refresh operation for the specified Power BI dataset pbicli dataset refresh detail [--workspace] [-w] [--dataset] [-d] [--refresh] [-r] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --refresh -r <refresh> ID of the refresh id Global Parameters pbicli dataset refresh history Get the history of a Power BI refresh schedule pbicli dataset refresh history [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset refresh show Get the details of a Power BI refresh schedule pbicli dataset refresh show [--workspace] [-w] [--dataset] [-d] [--direct-query] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --direct-query Dataset is a direct query or live connection Global Parameters pbicli dataset refresh start Triggers a Power BI dataset refresh pbicli dataset refresh start [--workspace] [-w] [--dataset] [-d] [--notify] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --notify <option> Allowed values: always, failure, none Global Parameters pbicli dataset refresh update Update a Power BI refresh schedule pbicli dataset refresh update [--workspace] [-w] [--dataset] [-d] [--refresh-schedule] [--refresh-schedule-file] [--direct-query] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --refresh-schedule <data> String with the refresh schedule in JSON format. Use @{file} to load from a file --refresh-schedule-file <file> File with the refresh schedule in JSON format. Deprecated: use --refresh-schedule @{file} --direct-query Dataset is a direct query or live connection Global Parameters pbicli dataset set-owner Set the owner of a Power BI dataset to the current user / service principal pbicli dataset set-owner [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset show Get the details of a Power BI dataset pbicli dataset show [--workspace] [-w] [--dataset] [-d] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset Global Parameters pbicli dataset update Updates the properties for the specified dataset pbicli dataset update [--workspace] [-w] [--dataset] [-d] [--large] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --dataset -d <dataset> Name or ID of the Power BI dataset --large Set dataset storage mode to support large datasets Global Parameters pbicli dataset user update Update access of a user or service pricipal pbicli dataset user update [--workspace] [-w] [--dataset] [-d] [--identifier] [--access-right] [--principal-type] Parameters --workspace -w <name> Name or ID of the Power BI workspace. Optional if dataset is provided as ID. --dataset -d <name> Name or ID of the Power BI dataset --identifier <identifier> Identifier of the user or principal --access-right <right> Access right. Allowed values: Read, ReadExplore, ReadReshare, ReadReshareExplore --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters Feedback"
  },
  "content/reference-embedded.html": {
    "href": "content/reference-embedded.html",
    "title": "pbicli embedded",
    "keywords": "pbicli embedded Commands pbicli embedded list Lists all the dedicated capacities for the given subscription pbicli embedded show Gets details about the specified dedicated capacity pbicli embedded start Starts the specified dedicated capacity pbicli embedded stop Stops the specified dedicated capacity pbicli embedded update Changes the specific capacity information pbicli embedded list Lists all the dedicated capacities for the given subscription pbicli embedded list [--subscription] [-s] [--resource] [-r] Parameters --subscription -s <subscription> Name or ID of the Azure subscription --resource -r <resource> (Optional) Name or ID of the Azure Resource group Global Parameters pbicli embedded show Gets details about the specified dedicated capacity pbicli embedded show [--subscription] [-s] [--resource] [-r] [--capacity] [-c] Parameters --subscription -s <subscription> Name or ID of the Azure subscription --resource -r <resource> Name or ID of the Azure Resource group --capacity -c <name> Name of the Azure dedicated capacity Global Parameters pbicli embedded start Starts the specified dedicated capacity pbicli embedded start [--subscription] [-s] [--resource] [-r] [--capacity] [-c] Parameters --subscription -s <subscription> Name or ID of the Azure subscription --resource -r <resource> Name or ID of the Azure Resource group --capacity -c <name> Name of the Azure dedicated capacity Global Parameters pbicli embedded stop Stops the specified dedicated capacity pbicli embedded stop [--subscription] [-s] [--resource] [-r] [--capacity] [-c] Parameters --subscription -s <subscription> Name or ID of the Azure subscription --resource -r <resource> Name or ID of the Azure Resource group --capacity -c <name> Name of the Azure dedicated capacity Global Parameters pbicli embedded update Changes the specific capacity information pbicli embedded update [--subscription] [-s] [--resource] [-r] [--capacity] [-c] [--parameter] [--parameter-file] Parameters --subscription -s <subscription> Name or ID of the Azure subscription --resource -r <resource> Name or ID of the Azure Resource group --capacity -c <name> Name of the Azure dedicated capacity --parameter <data> String with the capacity parameters in JSON format. Use @{file} to load from a file --parameter-file <file> File with the capacity parameters in JSON format. Deprecated: use --parameter @{file} Global Parameters Feedback"
  },
  "content/reference-feature.html": {
    "href": "content/reference-feature.html",
    "title": "pbicli feature",
    "keywords": "pbicli feature Commands pbicli feature list Returns a list of available features for the user pbicli feature show Returns the specified available feature for user by name pbicli feature list Returns a list of available features for the user pbicli feature list Global Parameters pbicli feature show Returns the specified available feature for user by name pbicli feature show [--feature] Parameters --feature <name> Name of the Power BI feature Global Parameters Feedback"
  },
  "content/reference-gateway.html": {
    "href": "content/reference-gateway.html",
    "title": "pbicli gateway",
    "keywords": "pbicli gateway Commands pbicli gateway datasource create Create a datasource at a Power BI gateway pbicli gateway datasource delete Deletes a datasource at a Power BI gateway pbicli gateway datasource list List datasources of a Power BI gateway pbicli gateway datasource show Get the detail of a datasource of a Power BI gateway pbicli gateway datasource status Get the status details of a datasource of a Power BI gateway pbicli gateway datasource update Update a datasource at a Power BI gateway pbicli gateway datasource user add Add user to a datasource of a Power BI gateway pbicli gateway datasource user delete Delete user from the datasource of a Power BI gateway pbicli gateway datasource user list Retrieve users for the datasource of a Power BI gateway pbicli gateway list List Power BI gateways pbicli gateway show Get the details of a Power BI gateway pbicli gateway datasource create Create a datasource at a Power BI gateway pbicli gateway datasource create [--gateway] [-g] [--datasource] [--datasource-file] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource <datasource> String with the datasource definition in JSON format. Use @{file} to load from a file --datasource-file <file> File with the datasource definition in JSON format. Deprecated: use --datasource @{file} Global Parameters pbicli gateway datasource delete Deletes a datasource at a Power BI gateway pbicli gateway datasource delete [--gateway] [-g] [--datasource] [-d] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway Global Parameters pbicli gateway datasource list List datasources of a Power BI gateway pbicli gateway datasource list [--gateway] [-g] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway Global Parameters pbicli gateway datasource show Get the detail of a datasource of a Power BI gateway pbicli gateway datasource show [--gateway] [-g] [--datasource] [-d] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway Global Parameters pbicli gateway datasource status Get the status details of a datasource of a Power BI gateway pbicli gateway datasource status [--gateway] [-g] [--datasource] [-d] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway Global Parameters pbicli gateway datasource update Update a datasource at a Power BI gateway pbicli gateway datasource update [--gateway] [-g] [--datasource] [-d] [--credential] [--credential-file] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway --credential <credential> String with the datasource credential definition in JSON format. Use @{file} to load from a file --credential-file <file> File with the datasource credential definition in JSON format. Deprecated: use --credential @{file} Global Parameters pbicli gateway datasource user add Add user to a datasource of a Power BI gateway pbicli gateway datasource user add [--gateway] [-g] [--datasource] [-d] [--email] [--identifier] [--access-right] [--principal-type] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway --email <email> Email address of the user --identifier <identifier> Identifier of the principal --access-right <right> Access right. Allowed values: None, Read, ReadOverrideEffectiveIdentity --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters pbicli gateway datasource user delete Delete user from the datasource of a Power BI gateway pbicli gateway datasource user delete [--gateway] [-g] [--datasource] [-d] [--email] [--identifier] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway --email <email> Email address of the user --identifier <identifier> Identifier of the principal Global Parameters pbicli gateway datasource user list Retrieve users for the datasource of a Power BI gateway pbicli gateway datasource user list [--gateway] [-g] [--datasource] [-d] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway --datasource -d <datasource> Name or ID of the datasource of the Power BI gateway Global Parameters pbicli gateway list List Power BI gateways pbicli gateway list Global Parameters pbicli gateway show Get the details of a Power BI gateway pbicli gateway show [--gateway] [-g] Parameters --gateway -g <gateway> Name or ID of the Power BI gateway Global Parameters Feedback"
  },
  "content/reference-import.html": {
    "href": "content/reference-import.html",
    "title": "pbicli import",
    "keywords": "pbicli import Commands pbicli import dataflow Upload of Power BI dataflow JSON file pbicli import list List Power BI imports pbicli import pbix Upload of Power BI PBIX file (< 1GB) pbicli import pbix-large Start an upload of Power BI PBIX file (> 1GB, < 10GB) pbicli import rdl Upload of Power BI RDL file pbicli import show Get the details of a Power BI import pbicli import temp Creates a temporaty upload location for a Power BI report pbicli import dataflow Upload of Power BI dataflow JSON file pbicli import dataflow [--workspace] [-w] [--file] [--conflict] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --file <file> Path to the dataflow JSON file --conflict <option> Option to resolve a dataflow name conflict. Allowed values: Abort, GenerateUniqueName Global Parameters pbicli import list List Power BI imports pbicli import list Global Parameters pbicli import pbix Upload of Power BI PBIX file (< 1GB) pbicli import pbix [--workspace] [-w] [--file] [--name] [--conflict] [--skip-report] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --file <path> Path to the PBIX file --name <name> The display name of the dataset with file extension. Default the file name is used --conflict <option> Option to resolve a dataset name conflict. Default value is 'Ignore'. Allowed values: Abort, CreateOrOverwrite, Ignore, Overwrite --skip-report Do not import the report from the PBIX file Global Parameters pbicli import pbix-large Start an upload of Power BI PBIX file (> 1GB, < 10GB) pbicli import pbix-large [--workspace] [-w] [--name] [--url] [--conflict] [--skip-report] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --name <name> The display name of the dataset --url <url> Url of the temporary blob storage --conflict <option> Option to resolve a dataset name conflict. Default value is 'Ignore'. Allowed values: Abort, CreateOrOverwrite, Ignore, Overwrite --skip-report Do not import the report from the PBIX file Global Parameters pbicli import rdl Upload of Power BI RDL file pbicli import rdl [--workspace] [-w] [--file] [--name] [--conflict] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --file <file> Path to the RDL file --name <name> The display name of the report with file extension. Default the file name is used --conflict <option> Option to resolve a report name conflict. Allowed values: Abort, Overwrite Global Parameters pbicli import show Get the details of a Power BI import pbicli import show [--workspace] [-w] [--import] [-i] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --import -i <import> Name or ID of the Power BI import Global Parameters pbicli import temp Creates a temporaty upload location for a Power BI report pbicli import temp [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters Feedback"
  },
  "content/reference-index.html": {
    "href": "content/reference-index.html",
    "title": "pbicli",
    "keywords": "pbicli Commands pbicli admin Operations for working with administrative tasks pbicli app Operations for working with apps pbicli capacity Operations for working with capacities pbicli cloud Operations for working with clouds pbicli configure Operations for working with CLI configuration pbicli dashboard Operations for working with dashboards pbicli dataflow Operations for working with dataflows pbicli dataset Operations for working with datasets pbicli embedded Operations for working with Embedded capacity pbicli feature Operations for working with features pbicli gateway Operations for working with gateways pbicli import Operations for working with imports pbicli interactive Start interactive mode pbicli login Login to Power BI pbicli logout Logout of Power BI pbicli pipeline Operations for working with pipelines pbicli report Operations for working with reports pbicli rest Invoke a custom Power BI REST API request pbicli scorecard Operations for working with scorecards (goals) pbicli user Operations for working with users pbicli version Show the version of this Power BI CLI pbicli workspace Operations for working with workspaces pbicli interactive Start interactive mode pbicli interactive Parameters -h, --help display help for command Global Parameters pbicli login Login to Power BI pbicli login [--interactive] [--use-device-code] [--azurecli] [--service-principal] [--principal] [-p] [--secret] [-s] [--tenant] [-t] [--no-azure] Parameters --interactive Login interactively. Default value if no parameter is given --use-device-code Use CLI's old authentication flow based on device code. --azurecli Login via Azure CLI --service-principal Login with a service principal --principal -p <principal> The service principal ID --secret -s <secret> Client secret --tenant -t <tenant> The AAD tenant --no-azure Do not authenticate against Azure for 'embedded' commands Examples Login interactive Bash PowerShell pbicli login pbicli login Login with Azure CLI credentials Bash PowerShell pbicli login --azurecli pbicli login --azurecli Log in with a service principal using client secret Bash PowerShell pbicli login --service-principal -p 7105d380-a699-4d0a-aeb4-ad3e6f4db865 -s VerySecret -t contoso.onmicrosoft.com pbicli login --service-principal -p 7105d380-a699-4d0a-aeb4-ad3e6f4db865 -s VerySecret -t contoso.onmicrosoft.com pbicli logout Log out and deletes stored login information for the Power BI REST APIs. pbicli logout Global Parameters pbicli rest Invoke a custom Power BI REST API request pbicli rest [--uri] [--body] [-b] [--headers] [--method] [-m] Parameters --uri <uri> Request URL. If it doesn't start with a host, CLI prefixes it with the current cloud endpoint. --body -b <body> Request body. Use @{file} to load from a file --headers <headers> Space-separated headers in KEY=VALUE format or JSON string --method -m <method> HTTP request method, accepted values: delete, get, head, options, patch, post, put Global Parameters pbicli version Show the version of this Power BI CLI pbicli version Feedback"
  },
  "content/reference-pipeline.html": {
    "href": "content/reference-pipeline.html",
    "title": "pbicli pipeline",
    "keywords": "pbicli pipeline Commands pbicli pipeline assign Assigns the workspace to the specified deployment pipeline stage pbicli pipeline create Creates a Power BI pipeline pbicli pipeline delete Delete a Power BI pipeline pbicli pipeline deploy Start a deploy from a specific stage in a Power BI pipeline pbicli pipeline list List Power BI pipelines pbicli pipeline operation list List the operations of a Power BI pipeline pbicli pipeline operation show Show a specific operation of a Power BI pipeline pbicli pipeline show Get the details of a Power BI pipeline pbicli pipeline stage artifact List the artifacts of a Power BI pipeline stage pbicli pipeline stage list List the stages of a Power BI pipeline pbicli pipeline unassign Unassigns the workspace to the specified deployment pipeline stage pbicli pipeline user delete Revoke access of a user or service pricipal pbicli pipeline user list List user and service pricipal with access pbicli pipeline user update Update access of a user or service pricipal pbicli pipeline assign Assigns the workspace to the specified deployment pipeline stage pbicli pipeline assign [--pipeline] [-p] [--stage] [--workspace] [-w] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --stage <number> The deployment pipeline stage order. Development (0), Test (1), Production (2) --workspace -w <name> Name of the Power BI workspace Global Parameters pbicli pipeline create Creates a Power BI pipeline pbicli pipeline create [--pipeline] [-p] Parameters --pipeline -p <name> Name of the Power BI pipeline Global Parameters pbicli pipeline delete Delete a Power BI pipeline pbicli pipeline delete [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli pipeline deploy Start a deploy from a specific stage in a Power BI pipeline pbicli pipeline deploy [--pipeline] [-p] [--partial] [--options] [--options-file] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --partial --options <data> String with the deploy options in JSON format. Use @{file} to load from a file --options-file <file> File with the deploy options in JSON format. Deprecated: use --options @{file} Global Parameters pbicli pipeline list List Power BI pipelines pbicli pipeline list Global Parameters pbicli pipeline operation list List the operations of a Power BI pipeline pbicli pipeline operation list [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli pipeline operation show Show a specific operation of a Power BI pipeline pbicli pipeline operation show [--pipeline] [-p] [--operation] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --operation <operationId> ID of the Power BI pipeline operation Global Parameters pbicli pipeline show Get the details of a Power BI pipeline pbicli pipeline show [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli pipeline stage artifact List the artifacts of a Power BI pipeline stage pbicli pipeline stage artifact [--pipeline] [-p] [--stage] [-s] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --stage -s <number> Number of the Power BI pipeline stage Global Parameters pbicli pipeline stage list List the stages of a Power BI pipeline pbicli pipeline stage list [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli pipeline unassign Unassigns the workspace to the specified deployment pipeline stage pbicli pipeline unassign [--pipeline] [-p] [--stage] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --stage <number> The deployment pipeline stage order. Development (0), Test (1), Production (2) Global Parameters pbicli pipeline user delete Revoke access of a user or service pricipal pbicli pipeline user delete [--pipeline] [-p] [--identifier] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --identifier <identifier> Identifier of the user or principal Global Parameters pbicli pipeline user list List user and service pricipal with access pbicli pipeline user list [--pipeline] [-p] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline Global Parameters pbicli pipeline user update Update access of a user or service pricipal pbicli pipeline user update [--pipeline] [-p] [--identifier] [--access-right] [--principal-type] Parameters --pipeline -p <name> Name or ID of the Power BI pipeline --identifier <identifier> Identifier of the user or principal --access-right <right> Access right. Allowed values: Admin --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters Feedback"
  },
  "content/reference-report.html": {
    "href": "content/reference-report.html",
    "title": "pbicli report",
    "keywords": "pbicli report Commands pbicli report clone Clones a Power BI report from a group pbicli report datasource list List the datasources of a Power BI report [DEFAULT] pbicli report datasource update Update the datasources of a Power BI paginated report pbicli report delete Deletes a Power BI report from a group pbicli report export download Download the exported Power BI report pbicli report export start Start a Power BI report export pbicli report export status Get the status of a Power BI report export pbicli report list List Power BI reports in a group pbicli report page Get the details of a Power BI report page pbicli report rebind Rebind a Power BI report to a dataset pbicli report show Get the details of a Power BI report pbicli report update Updates a Power BI report with to a dataset pbicli report clone Clones a Power BI report from a group pbicli report clone [--workspace] [-w] [--report] [-r] [--name] [--target-dataset] [--target-group] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --name <name> Name of the new Power BI report --target-dataset <dataset> ID of the Power BI dataset for the cloned report. If not provided, the same dataset is used --target-group [group] ID of the Power BI group for the cloned report. If not provided, the same group is used and if [workspaceId] is not provided 'My workspace' is used Global Parameters pbicli report datasource list List the datasources of a Power BI report [DEFAULT] pbicli report datasource list [--workspace] [-w] [--report] [-r] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report Global Parameters pbicli report datasource update Update the datasources of a Power BI paginated report pbicli report datasource update [--workspace] [-w] [--report] [-r] [--update-details] [--update-details-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --update-details <data> String with the paginated report datasources details in JSON format. Use @{file} to load from a file --update-details-file <file> File with the paginated report datasources details in JSON format. Deprecated: use --update-details @{file} Global Parameters pbicli report delete Deletes a Power BI report from a group pbicli report delete [--workspace] [-w] [--report] [-r] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report Global Parameters pbicli report export download Download the exported Power BI report pbicli report export download [--workspace] [-w] [--report] [-r] [--export] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --export <export> ID of the Power BI report export Global Parameters pbicli report export start Start a Power BI report export pbicli report export start [--workspace] [-w] [--report] [-r] [--format] [--config] [--config-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --format <format> Format of the exported report. Supported: PDF, PPTX (All report types) PBIX (Power BI reports) CSV, DOCX, IMAGE, MHTML, PNG, XLSX, XML (Paginated reports) --config <data> String with additional export config in JSON format. Use @{file} to load from a file --config-file <file> File with additional export config in JSON format. Deprecated: use --config @{file} Global Parameters pbicli report export status Get the status of a Power BI report export pbicli report export status [--workspace] [-w] [--report] [-r] [--export] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --export <export> ID of the Power BI report export Global Parameters pbicli report list List Power BI reports in a group pbicli report list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli report page Get the details of a Power BI report page pbicli report page [--workspace] [-w] [--report] [-r] [--page-name] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --page-name <name> Name of the Power BI report page Global Parameters pbicli report rebind Rebind a Power BI report to a dataset pbicli report rebind [--workspace] [-w] [--report] [-r] [--target-dataset] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --target-dataset <dataset> ID of the new Power BI dataset for the rebound report Global Parameters pbicli report show Get the details of a Power BI report pbicli report show [--workspace] [-w] [--report] [-r] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report Global Parameters pbicli report update Updates a Power BI report with to a dataset pbicli report update [--workspace] [-w] [--report] [-r] [--source-group] [--source-report] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <report> Name or ID of the Power BI report --source-group <group> ID of the source Power BI group --source-report <report> ID of the source Power BI report Global Parameters Feedback"
  },
  "content/reference-scorecard.html": {
    "href": "content/reference-scorecard.html",
    "title": "pbicli scorecard",
    "keywords": "pbicli scorecard Commands pbicli scorecard create Create a Power BI scorecard pbicli scorecard delete Delete a Power BI scorecard pbicli scorecard goal create Adds a new goal to a scorecard pbicli scorecard goal delete Deletes a goal from a Power BI scorecard pbicli scorecard goal disconnect Disconnects the current value or target of a connected goal pbicli scorecard goal history Gets the refresh history of a connected goal pbicli scorecard goal list List Power BI scorecard goals in a workplace pbicli scorecard goal refresh Schedules a refresh of the current value or target of a connected goal pbicli scorecard goal rule create Creates or updates status rules of a goal pbicli scorecard goal rule delete Removes status rule definitions from a goal pbicli scorecard goal rule show Show status rules of a goal pbicli scorecard goal show Get the details of a Power BI scorecard connected goal pbicli scorecard goal value create Creates a new goal value check-in pbicli scorecard goal value delete Deletes a goal value check-in pbicli scorecard goal value list List the goal value check-ins pbicli scorecard goal value note create Creates a new goal value check-in note pbicli scorecard goal value note delete Deletes a goal value check-in note pbicli scorecard goal value note update Updates a goal value check-in note pbicli scorecard goal value show Show a goal value check-ins pbicli scorecard goal value update Updates a goal value check-in pbicli scorecard list List Power BI scorecards pbicli scorecard move Moves goals within the scorecard pbicli scorecard show Get the details of a Power BI scorecard pbicli scorecard update Update a Power BI scorecard pbicli scorecard create Create a Power BI scorecard pbicli scorecard create [--workspace] [-w] [--scorecard] [-s] [--description] [--contact] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --description <description> Description of the Power BI scorecard --contact <contact> Contact of the Power BI scorecard Global Parameters pbicli scorecard delete Delete a Power BI scorecard pbicli scorecard delete [--workspace] [-w] [--scorecard] [-s] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <name> Name or ID of the Power BI scorecard Global Parameters pbicli scorecard goal create Adds a new goal to a scorecard pbicli scorecard goal create [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--definition] [--definition-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name of the Power BI scorecard goal --definition <definition> String with the goal definition in JSON format. Use @{file} to load from a file --definition-file <file> File with the goal definition in JSON format. Deprecated: use --definition @{file} Global Parameters pbicli scorecard goal delete Deletes a goal from a Power BI scorecard pbicli scorecard goal delete [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal disconnect Disconnects the current value or target of a connected goal pbicli scorecard goal disconnect [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--current] [--target] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --current Disconnect the current value of the goal --target Disconnect the target value of the goal Global Parameters pbicli scorecard goal history Gets the refresh history of a connected goal pbicli scorecard goal history [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal list List Power BI scorecard goals in a workplace pbicli scorecard goal list [--workspace] [-w] [--scorecard] [-s] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard Global Parameters pbicli scorecard goal refresh Schedules a refresh of the current value or target of a connected goal pbicli scorecard goal refresh [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--current] [--target] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --current Schedules a refresh of the current value of the goal --target Schedules a refresh of the target value of the goal Global Parameters pbicli scorecard goal rule create Creates or updates status rules of a goal pbicli scorecard goal rule create [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--definition] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --definition <definition> String with the goal definition in JSON format. Use @{file} to load from a file Global Parameters pbicli scorecard goal rule delete Removes status rule definitions from a goal pbicli scorecard goal rule delete [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal rule show Show status rules of a goal pbicli scorecard goal rule show [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal show Get the details of a Power BI scorecard connected goal pbicli scorecard goal show [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal value create Creates a new goal value check-in pbicli scorecard goal value create [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--definition] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --definition <definition> String with the goal definition in JSON format. Use @{file} to load from a file Global Parameters pbicli scorecard goal value delete Deletes a goal value check-in pbicli scorecard goal value delete [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal Global Parameters pbicli scorecard goal value list List the goal value check-ins pbicli scorecard goal value list [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal Global Parameters pbicli scorecard goal value note create Creates a new goal value check-in note pbicli scorecard goal value note create [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] [--text] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal --text <text> String with the note text in JSON format. Use @{file} to load from a file Global Parameters pbicli scorecard goal value note delete Deletes a goal value check-in note pbicli scorecard goal value note delete [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] [--note] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal --note <note> ID of the note Global Parameters pbicli scorecard goal value note update Updates a goal value check-in note pbicli scorecard goal value note update [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] [--note] [--text] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal --note <note> ID of the note --text <text> String with the note text in JSON format. Use @{file} to load from a file Global Parameters pbicli scorecard goal value show Show a goal value check-ins pbicli scorecard goal value show [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] [--expand] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal --expand <entity> Expands related entities inline, receives a comma-separated list of data types. Allowed values: notes Global Parameters pbicli scorecard goal value update Updates a goal value check-in pbicli scorecard goal value update [--workspace] [-w] [--scorecard] [-s] [--goal] [-g] [--timestamp] [--definition] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <scorecard> Name of the Power BI scorecard --goal -g <goal> Name or ID of the Power BI scorecard goal --timestamp <timestamp> The timestamp for the value of the goal --definition <definition> String with the goal definition in JSON format. Use @{file} to load from a file Global Parameters pbicli scorecard list List Power BI scorecards pbicli scorecard list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' Global Parameters pbicli scorecard move Moves goals within the scorecard pbicli scorecard move [--workspace] [-w] [--scorecard] [-s] [--definition] [--definition-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <name> Name or ID of the Power BI scorecard --definition <definition> String with the 'goal move' definition in JSON format. Use @{file} to load from a file --definition-file <file> File with the 'goal move' definition in JSON format. Deprecated: use --definition @{file} Global Parameters pbicli scorecard show Get the details of a Power BI scorecard pbicli scorecard show [--workspace] [-w] [--report] [-r] [--scorecard] [-s] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --report -r <name> Name or ID of the linked Power BI report --scorecard -s <name> Name or ID of the Power BI scorecard Global Parameters pbicli scorecard update Update a Power BI scorecard pbicli scorecard update [--workspace] [-w] [--scorecard] [-s] [--definition] [--definition-file] Parameters --workspace -w <name> Name or ID of the Power BI workspace. If not provided it uses 'My workspace' --scorecard -s <name> Name or ID of the Power BI scorecard --definition <definition> String with the scorecard definition in JSON format. Use @{file} to load from a file --definition-file <file> File with the scorecard definition in JSON format. Deprecated: use --definition @{file} Global Parameters Feedback"
  },
  "content/reference-user.html": {
    "href": "content/reference-user.html",
    "title": "pbicli user",
    "keywords": "pbicli user Commands pbicli user refresh Refreshes user permissions in Power BI pbicli user refresh Refreshes user permissions in Power BI pbicli user refresh Global Parameters Feedback"
  },
  "content/reference-workspace.html": {
    "href": "content/reference-workspace.html",
    "title": "pbicli workspace",
    "keywords": "pbicli workspace Commands pbicli workspace create Creates a Power BI workspace pbicli workspace delete Delete a Power BI workspace pbicli workspace list List Power BI workspaces the user has access to pbicli workspace show Get detials of a Power BI workspace pbicli workspace user add Grant access to a user or service pricipal pbicli workspace user delete Revoke access of a user or service pricipal pbicli workspace user list List user and service pricipal with access pbicli workspace user update Update access of a user or service pricipal pbicli workspace create Creates a Power BI workspace pbicli workspace create [--workspace] [-w] Parameters --workspace -w <name> Name of the Power BI workspace Global Parameters pbicli workspace delete Delete a Power BI workspace pbicli workspace delete [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli workspace list List Power BI workspaces the user has access to pbicli workspace list Global Parameters pbicli workspace show Get detials of a Power BI workspace pbicli workspace show [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli workspace user add Grant access to a user or service pricipal pbicli workspace user add [--workspace] [-w] [--email] [--identifier] [--access-right] [--principal-type] Parameters --workspace -w <name> Name or ID of the Power BI workspace --email <email> Email address of the user --identifier <identifier> Identifier of the principal --access-right <right> Access right. Allowed values: Admin, Contributor, Member, Viewer --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters pbicli workspace user delete Revoke access of a user or service pricipal pbicli workspace user delete [--workspace] [-w] [--email] [--identifier] Parameters --workspace -w <name> Name or ID of the Power BI workspace --email <email> Email address of the user --identifier <identifier> Identifier of the principal Global Parameters pbicli workspace user list List user and service pricipal with access pbicli workspace user list [--workspace] [-w] Parameters --workspace -w <name> Name or ID of the Power BI workspace Global Parameters pbicli workspace user update Update access of a user or service pricipal pbicli workspace user update [--workspace] [-w] [--email] [--identifier] [--access-right] [--principal-type] Parameters --workspace -w <name> Name or ID of the Power BI workspace --email <email> Email address of the user --identifier <identifier> Identifier of the principal --access-right <right> Access right. Allowed values: Admin, Contributor, Member, Viewer --principal-type <type> Type of pricipal. Allowed values: App, User, Group, None Global Parameters Feedback"
  },
  "content/reference-xmla.html": {
    "href": "content/reference-xmla.html",
    "title": "pbicli xmla",
    "keywords": "pbicli xmla Caution The XMLA command is now obsolete and will be removed in future version. Please use pbici dataset query Commands pbicli xmla query Execute an XMLA query against the Power BI XMLA endpoint pbicli xmla query Execute an XMLA query against the Power BI XMLA endpoint pbicli xmla query [--connection] [-c] [--dataset] [-d] [--script] [--script-file] Parameters --connection -c <connection> XMLA Endpoint or workspace connection --dataset -d <dataset> Name of the Power BI dataset --script <script> String with the actual script, query, or statement --script-file <file> File with the actual script, query, or statement Global Parameters Feedback"
  },
  "content/releasenotes.html": {
    "href": "content/releasenotes.html",
    "title": "Power BI CLI release notes",
    "keywords": "Power BI CLI release notes v1.3.2 - September 5, 2022 Changed General Fix bug that prevents to login to a sovereign cloud v1.3.0 - August 18, 2022 Changed General All file parameters now support @{file} syntax to load content from a file. The version command now return a JSON output with the current version and updated version, if available The interactive mode can be entered via the interactive command dataset Fix an issue with the query command not excepting an inline query Added admin Added dashboard subscription command Added shared command dashboard Added delete command dataset Added refresh cancel command Added refresh detail command Added update command rest Added functionality scorecard Added move command Added show command Added update command Added goal delete command Added goal disconnect command Added goal history command Added goal refresh command Added goal update command Added goal rule crete command Added goal rule delete command Added goal rule show command Added goal value create command Added goal value delete command Added goal value list command Added goal value show command Added goal value update command Added goal value note create command Added goal value note delete command Added goal value note update command workspace Added Viewer role for the user commands v1.2.1 - February 25, 2022 Changed admin Fixed error in parameter --workspace-file of workspace scan command v1.2.0 - December 20, 2011 Added admin Added missing commands, including workspace scan, get users, and information protection label commands cloud Added functionality (multi cloud) configure Added functionality dataflow Added transaction command Added update command dataset Added query command to execute DAX queries Added refresh command Added user command pipeline Added functionality scorecard Added functionality user Added functionality Changed xmla Deprecated with this version; will removed in a future version v1.1.0 - May 16, 2021 Added embedded Added functionality xmla Added functionality, but in preview Changed General change of the default login behaviour report fix issue with the rebind command v1.0.4 - October 6, 2020 Changed General fix login issue: not correctly store auth token v1.0.2 - September 22, 2020 Changed workspace Fixed option --workspace to be required for command workspace add list v1.0.1 - August 27, 2020 Changed General Multiple description are updated dataflow Fixed missing commands refresh and storage version Fixed incorrect version reference v1.0.0 - August 27, 2020 Added admin Added functionality capacity Added functionality feature Added functionality Changed General [BREAKING CHANGE] group commands and options are renamed to workspace version changed to command workspace Renamed from group v0.9.0 - June 22, 2020 This version is the first beta release of this Power BI CLI. The command supported by this version are: app dashboard dataflow dataset gateway group import report Feedback"
  },
  "content/samples-dataset.html": {
    "href": "content/samples-dataset.html",
    "title": "Power BI CLI Samples for Power BI datasets",
    "keywords": "Power BI CLI Samples for Power BI datasets The following table includes links to bash and PowerShell scripts built using the Power BI CLI. Script Description List datasets List datasets Execute query Execute DAX query to a (premium) dataset Update refresh schedule Update a dataset refresh schedule List datasets List datasets the user/service principal has access to for a certain workspace Bash PowerShell pbicli dataset list --workspace Demos pbicli dataset list --workspace Demos Execute query Update a dataset refresh schedule which is stored in a JSON file in the current directory Bash PowerShell pbicli dataset query --workspace Demos --dataset Demos --dax \"EVALUATE(TOPN(1, 'Customer'))\" pbicli dataset query --workspace Demos --dataset Demos --dax \"EVALUATE(TOPN(1, 'Customer'))\" Update refresh schedule Executes a DAX query to a premium dataset Bash PowerShell pbicli dataset refresh update --workspace Demos --dataset Demos --refresh-schedule @refresh-schedule.json pbicli dataset refresh update --workspace Demos --dataset Demos --refresh-schedule @refresh-schedule.json Schedule definition file that enables the schedule for a dataset to be fereshed at Sunday, Tuesday, Friday and Saturday at 7:00, 11:30, 16:00 and 23:30 UTC. # refresh-schedule.json { \"value\": { \"days\": [\"Sunday\", \"Tuesday\", \"Friday\", \"Saturday\"], \"times\": [\"07:00\", \"11:30\", \"16:00\", \"23:30\"], \"localTimeZoneId\": \"UTC\", \"enabled\": true } } Feedback"
  },
  "content/samples-index.html": {
    "href": "content/samples-index.html",
    "title": "Power BI CLI Samples",
    "keywords": "Power BI CLI Samples The following table includes links to bash and PowerShell scripts built using the Power BI CLI. Dataset samples Report samples Scorecard samples Workspaces samples Feedback"
  },
  "content/samples-report.html": {
    "href": "content/samples-report.html",
    "title": "Power BI CLI Samples for Power BI reports",
    "keywords": "Power BI CLI Samples for Power BI reports The following table includes links to bash and PowerShell scripts built using the Power BI CLI. Script Description List reports List reports List all reports List all reports List reports List reports the user/service principal has access to for a certain workspace Bash PowerShell pbicli report list --workspace Demos pbicli report list --workspace Demos List all reports List all reports from all workspaces the user/service principal has access to Bash PowerShell # Retrieve all workspace ids workspaces=`pbicli workspace list --query \"[*].{id:id}\" --output tsv` # Loop thru all the available workspaces for workspace in $workspaces do pbicli report list --workspace $workspace done # Retrieve all workspace ids $workspaces=pbicli workspace list --query \"[*].{id:id}\" --output tsv # Loop thru all the available workspaces foreach ($workspace in $workspaces) { pbicli report list --workspace $workspace } Feedback"
  },
  "content/samples-scorecard.html": {
    "href": "content/samples-scorecard.html",
    "title": "Power BI CLI Samples for Power BI scorecards",
    "keywords": "Power BI CLI Samples for Power BI scorecards The following table includes links to Bash and PowerShell scripts built using the Power BI CLI. Script Description List scorecards List scorecards List metrics List all metrics from a scorecard List value check-ins List all the value check-ins of a given metric and scorecard List value check-in notes List all notes of a specific value check-in Add value check-in note Add a new note to a value check-in List scorecards List scorecards the user/service principal has access to for a certain workspace Bash PowerShell pbicli scorecard list --workspace Demos pbicli scorecard list --workspace Demos List metrics List all metrics from a scorecard Bash PowerShell pbicli scorecard goal list --workspace Demos --scorecard Demo pbicli scorecard goal list --workspace Demos --scorecard Demo List value check-ins List all the value check-ins of a given metric and scorecard Bash PowerShell pbicli scorecard goal value list --workspace Demos --scorecard Demo --goal Goal pbicli scorecard goal value list --workspace Demos --scorecard Demo --goal Goal List value check-in notes List all notes of a specific value check-in Bash PowerShell pbicli scorecard goal value show --workspace Demos --scorecard Demo --goal Goal --timestamp 2022-08-01 --expand notes --query notes pbicli scorecard goal value show --workspace Demos --scorecard Demo --goal Goal --timestamp 2022-08-01 --expand notes --query notes Add value check-in note Add a new note to a value check-in Bash PowerShell pbicli scorecard goal value show --workspace Demos --scorecard Demo --goal Goal --timestamp 2022-08-01 --text \"Check-in note\" pbicli scorecard goal value show --workspace Demos --scorecard Demo --goal Goal --timestamp 2022-08-01 --text \"Check-in note\" To mention someone when a note is added to a value check-in, a JSON file is needed with the following definition. The GUID used doen;t need to be related to the online identity and can be generated for the note. To use it with the pbicli use --text @note.json . # note.json { \"body\": \"API call with a mention @cfdf20c3-4b53-4f5f-afd7-4a8b108b9dfc\", \"mentions\": [ { \"id\": \"cfdf20c3-4b53-4f5f-afd7-4a8b108b9dfc\", \"emailAddress\": \"johndoe@contoso.com\", \"displayName\": \"John Doe\" } ] } Feedback"
  },
  "content/samples-workspace.html": {
    "href": "content/samples-workspace.html",
    "title": "Power BI CLI Samples for Power BI workspaces",
    "keywords": "Power BI CLI Samples for Power BI workspaces The following table includes links to bash and PowerShell scripts built using the Power BI CLI. Script Description List workspaces List workspaces Add user Add user to workspace List workspaces List all workspace the user/service principal has access to Bash PowerShell pbicli workspace list pbicli workspace list Add user Add a user to a given workspace Bash PowerShell pbicli workspace user add --workspace Demos --email john.doe@adventureworks.com --principal-type User --access-right Member pbicli workspace user add --workspace Demos --email john.doe@adventureworks.com --principal-type User --access-right Member Feedback"
  },
  "content/serviceprincipal.html": {
    "href": "content/serviceprincipal.html",
    "title": "Setup a Service Principal",
    "keywords": "Setup a Service Principal To use service principal with the Power BI CLI, follow these steps: Step 1 - Create an Azure AD app Create an Azure AD app using one of these methods and store the following information securely as it is needed: Azure app's Application ID Azure AD app's secret Azure app's Tenant ID Creating an Azure AD app in the Microsoft Azure portal See the create an Azure AD app article for the steps. You can skip the 'Role' and 'Policy' parts. Creating an Azure AD app using a script This section includes a sample script to create a new Azure AD app using the Azure CLI or PowerShell. Azure CLI PowerShell # Result contains the appId, password (secret) and tenant # Sign in as a user that's allowed to create an app az login # Creates a new Azure AD web application and service principal az ad sp create-for-rbac --name <ApplicationName> # The app ID - $app.appid # The service principal object ID - $sp.objectId # The app key - $key.value # Sign in as a user that's allowed to create an app Connect-AzureAD # Create a new Azure AD web application $app = New-AzureADApplication -DisplayName <ApplicationName> -Homepage \"https://localhost:44322\" -ReplyUrls \"https://localhost:44322\" # Creates a service principal $sp = New-AzureADServicePrincipal -AppId $app.AppId # Get the service principal key $key = New-AzureADServicePrincipalPasswordCredential -ObjectId $sp.ObjectId Step 2 - Create an Azure AD security group Your service principal doesn't have access to any of your Power BI content and APIs. To give the service principal access, create a security group in Azure AD, and add the service principal you created to that security group. Creating an Azure AD security group in the Microsoft Azure portal See the create a basic group and add members using Azure AD article for the steps. Creating an Azure AD security group using a script Azure CLI PowerShell # Result contains the appId, password (secret) and tenant # Sign in as a user that's allowed to create an app az login # Create an Azure AD security group $group = az ad group create --display-name <GroupName> --mail-nickname notSet --query \"{objectId:objectId}\" --output tsv # Retrieve correct object ID of the Setivce Principal $member = az ad sp show --id <AppID> --query \"{objectId:objectId}\" --output tsv # Add the service principal to the group az ad group member add --group $group --member-id $member # Required to sign in as admin Connect-AzureAD # Create an Azure AD security group $group = New-AzureADGroup -DisplayName <GroupName> -SecurityEnabled $true -MailEnabled $false -MailNickName notSet # Add the service principal to the group Add-AzureADGroupMember -ObjectId $($group.ObjectId) -RefObjectId $($sp.ObjectId) Step 3 - Enable the Power BI service admin settings For an Azure AD app to be able to access the Power BI content and APIs, a Power BI admin needs to enable service principal access in the Power BI admin portal. Navigate to to Power BI Admin Portal: https://app.powerbi.com/admin-portal/tenantSettings Scroll down to the Developer settings section Expand the Allow service principals to use Power BI APIs setting Click on the enable toggle to enable the setting Choose Specific security groups (Recommended) in the 'Apply to' radio buttons Add the security group created in step 2 in the textbox Click on Apply button to save the setting Step 4 - Required API permissions To access the Power BI APIs vai the Power BI CLI, the service principal need several scope assigned. In the table below is an overview of the required scopes. Command Required scope admin Tenant.Read.All, Tenant.ReadWrite.All app App.Read.All capacity Capacity.Read.All, Capacity.ReadWrite.All dashboard Dashboard.Read.All, Dashboard.ReadWrite.All, Content.Create dataflow Dataflow.ReadWrite.All, Dataflow.Read.All dataset Dataset.ReadWrite.All, Dataset.Read.All feature None gateway Dataset.Read.All, Dataset.ReadWrite.All import Dataset.ReadWrite.All report Report.Read.All, Report.ReadWrite.All, Dataset.Read.All, Dataset.ReadWrite.All workspace Workspace.Read.All, Workspace.ReadWrite.All Adding the scopes as API permissions can be done via the Azure Portal on the management pane of the service principal. Note For the Tenant.Read.All and Tenant.ReadWrite.All scopes Admin consent is needed. This can be applied via the Azure portal. Step 5 - Add the service principal to your workspace To enable your Azure AD app access artifacts such as reports, dashboards and datasets in the Power BI service, add the service principal entity, or the security group that includes your service principal, as a member or admin to your workspace. Alternative you can add the service principal as Power BI administrator via Roles and administrators part of your Azure Active Directory management. Feedback"
  },
  "content/signin.html": {
    "href": "content/signin.html",
    "title": "Sign in with Power BI CLI",
    "keywords": "Sign in with Power BI CLI Before using any CLI commands with a local install, you need to sign in with pbicli login . Run the login command az login If CLI can open your default browser, it will do so and load an Azure sign-in page. Otherwise, open a browser page at https://aka.ms/devicelogin and enter the authorization code displayed in your terminal. If no web browser is available or the web browser fails to open, use device code flow with pbicli login --use-device-code . Sign in with your account credentials in the browser. After a successfull login run the login command of the Power BI CLI Sign in with a service principal Service principals are accounts not tied to any particular user, which can have permissions on them assigned through pre-defined roles. Authenticating with a service principal is the best way to write secure scripts or programs, allowing you to apply both permissions restrictions and locally stored static credential information. To learn more about service principals, see Setup a Service Principal . To sign in with a service principal, you need: The service principal id The service principal secret The tenant associated with the service principal, as either an .onmicrosoft.com domain or Azure object ID pbicli login --service-principal -p <principal id> -s <secret> -t <tenant> Environment variables It is possible to use enviroment variables for the different login flow which can be usefull in a automatic flow. Caution Please be aware that these environment variables stores sensitive information and can be used by other programs and use with caution. Variable Purpose PBICLI_PRINCIPAL Can be used to store the principal id of the service principal PBICLI_SECRET Can be used to store the secret of the service principal PBICLI_TENANT Can be used to store the tenant of the service principal. Can also be used for the interactive login flow. .pbiclirc Besides using enviroment variables it is also possible to store this information in a .pbiclirc file. This file can contain the same sensible information in a JSON format. Caution Please be aware that these environment variables stores sensitive information and can be used by other programs and use with caution. { \"principal\": \"...\", \"secret\": \"...\", \"tenant\": \"...\" } Feedback"
  },
  "content/whatis.html": {
    "href": "content/whatis.html",
    "title": "What is Power BI CLI",
    "keywords": "What is Power BI CLI The Power BI command-line interface (Power BI CLI) is a set of commands used to create and manage Power BI resources (e.g. reports, users and capacity). The CLI is designed to get you working quickly with Power BI, with an emphasis on automation. Key Characteristics Power BI CLI capabilities make it easy to work with different programing languages and software environments. For example, Power BI CLI: Is available to install in Windows, macOS, and Linux environments. Offers command-line flexibility when managing an Power BI tentant. Current Version The current version of the Power BI CLI is 1.3.2. For information about the latest release, see the release notes. To find your installed version and see if you need to update, run pbicli --version . Feedback"
  },
  "global.html": {
    "href": "global.html",
    "title": "",
    "keywords": "--debug Increase logging verbosity to show debug logs --help -h Show this help message and exit --output -o [output] Output format. Allowed values: json, tsv, csv, yml. Default: json --output-file <file> Save response payload to a file --query JMESPath query string. See http://jmespath.org/ for more information and examples --verbose Increase logging verbosity to show all logs"
  },
  "index.html": {
    "href": "index.html",
    "title": "Overview of the Power BI CLI",
    "keywords": "Power BI Command-Line Interface (CLI) documentation The Power BI command-line interface (Power BI CLI) is a set of commands used to create and manage Power BI resources (e.g. reports, users and capacity). The CLI is designed to get you working quickly with Power BI, with an emphasis on automation. Install the Power BI CLI Installation overview Setup a Service Principal Privacy statement Learn Power BI CLI features Get started with Power BI CLI Sign in with Power BI CLI Samples How-to guides How-to: Using quotes sucessfully How-to: Query command output How-to: Use the Azure Pipeline task Give feedback Request a new feature Report a product bug Power BI CLI reference Reference Release notes"
  },
  "README.html": {
    "href": "README.html",
    "title": "Power BI CLI documentation",
    "keywords": "Power BI CLI documentation The repository contains the documentation of the Power BI CLI ."
  }
}